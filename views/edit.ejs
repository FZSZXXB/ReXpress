<%
if ('undefined' != typeof article) { this.title = article.title; }
else { this.title = "新建文章"; }
%>

<%- include('head') %>
<style>
  .copy:hover {
    cursor: pointer;
  }
</style>
<% if ('undefined' != typeof article) { %>
  <h4 class="ui top attached block header"><i class="ui folder icon"></i>文件列表</h4>
  <textarea id="fileListTmp" style="display: none;">
    <% if (files) { %>
&gt;&nbsp;点击图片进入阅览模式~
<%
    let pdfFile = '';
    for (let file of files) {
      let extName = file.substr(file.lastIndexOf('.') + 1)
      if (extName == 'jpg' || extName == 'png') { %>
![](<%= web_util.makeUrl(['api', 'download', article.id, file]) %>)
      <% } else if (extName == 'pdf') pdfFile = file;
    } 
    if (pdfFile.length > 0) { %>
[PDF 文件下载](<%= web_util.makeUrl(['api', 'download', article.id, pdfFile]) %>)
    <% }
    } %>
  </textarea>
  <div class="ui bottom attached segment">
    <table class="ui very basic center aligned unstackable table">
      <thead>
        <tr>
          <th class="left aligned">文件名</th>
          <th style="width: 35px">链接</th>
          <th style="width: 35px">下载</th>
          <th style="width: 35px">删除</th>
          
        </tr>
      </thead>
      <tbody>
        <% if (files) { for (let file of files) { %>
        <tr>
          <td class="left aligned"><i class="file icon"></i> <%= file %></td>
          <td><div class="copy" style="color: #fdd72d; " onclick="copyText('<%= web_util.makeUrl(['api', 'download', article.id, file]) %>')"><i class="fad fa-clipboard fa-fw"></i></div></td>
          <td><a style="color: #6cf; " href="<%= web_util.makeUrl(['api', 'download', article.id, file]) %>"><i class="fad fa-download fa-fw"></i></a></td>
          <td><div style="color: red;" class="copy" onclick="deleteFile(<%= article.id %>, '<%= file %>')"><i class="fad fa-times fa-fw"></i></div></td>
          
        </tr>
       
      <% } } %>
      </tbody>
    </table>
    <form class="ui form" id="uploadForm" enctype="multipart/form-data"> 
      <label for="file">上传文件（请使用 ZIP 格式）</label>
      <input type="file" name="file" id="file">
    </form>
    <div class="ui center aligned vertical segment" style="padding-bottom: 0; ">
      <div class="ui labeled icon blue button" onclick="uploadFile(<%= article.id %>)"><i class="ui edit icon"></i>提交</div>
      <div class="ui labeled icon pink button" onclick="writeAlbum()"><i class="ui lightning icon"></i>一键生成相册</div>
    </div>
  </div>
<% } %>
<div class="ui segment">
  <div class="ui form">
    <div class="field">
      <label for="title">标题</label>
      <input type="text" id="title" name="title" value="<%= 'undefined' == typeof article ? '' : article.title %>">
    </div>
    <div class="field">
      <label for="title">描述（可选）</label>
      <input type="text" id="description" name="description" value="<%= 'undefined' == typeof article ? '' : article.description %>">
    </div>
    
    <div class="ui two column very relaxed grid">
      <div class="column field">
        <label for="music_server">选择音乐服务</label>
        <select class="ui dropdown" name="music_server" id="music_server">
          <option value="" <%= 'undefined' == typeof article ? 'selected' : (article.music_server == '' ? 'selected' : '') %>>无服务</option>
          <option value="netease" <%= 'undefined' == typeof article ? '' : (article.music_server == 'netease' ? 'selected' : '') %>>网易云音乐</option>
          <option value="tencent" <%= 'undefined' == typeof article ? '' : (article.music_server == 'tencent' ? 'selected' : '') %>>QQ 音乐</option>
          <option value="kugou" <%= 'undefined' == typeof article ? '' : (article.music_server == 'kugou' ? 'selected' : '') %>>酷狗音乐</option>
          <option value="baidu" <%= 'undefined' == typeof article ? '' : (article.music_server == 'baidu' ? 'selected' : '') %>>千千音乐</option>
        </select>
      </div>
      <div class="column field">
        <label for="music_id">音乐 ID</label>
        <div class="inline field">
          <input type="text" id="music_id" name="music_id" value="<%= 'undefined' == typeof article ? '' : article.music_id %>"><button class="ui circular label" id="helpMusicId">?</button>
        </div>
      </div>
    </div>
    <div class="field">
      <label>内容</label>
      <textarea id='tmp' style="display: none;"><%= 'undefined' == typeof article ? '' : article.content %></textarea>
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/markdown-palettes@0.4.13/dist/markdown-palettes.css">
      <script src="https://cdn.jsdelivr.net/npm/markdown-palettes@0.4.13/dist/markdown-palettes.min.js"></script>
      <div id="editor-container" style="height: 700px;">
        <div id="editor">正在加载 Markdown 编辑器. . .</div>
      </div>
    </div>
  </div>
  <br>
</div>
<div style="text-align: center; ">
  <button id="submit_button" class="ui labeled submit icon button" onclick="javascript:submit(<%= 'undefined' == typeof article ? 0 : article.id %>)">
    <i class="icon edit"></i> 发布文章
  </button>

</div>
</div>

<script>
$('#helpMusicId').popup({
	title : '获取音乐 ID',
  content : '音乐 ID 通常可以从网页版的链接中获取，如 https://music.163.com/#/song?id=1400761054。'
});
var markdownEditor = new MarkdownPalettes("#editor");
markdownEditor.content = $('#tmp').val();
function show_error(title, error) {
  swal({
    title: title + "失败。",
    icon: "error",
    text: error
  });
}
function success(title, id) {
  swal({
    title: title + "成功！",
    icon: "success"
  }).then(function () {
    window.location.href = location.protocol + '//' + location.host + '/article/' + id;
  });
}
function submit(id) {
  $.ajax({
    url: `/article/${id}/edit`,
    type: 'POST',
    data: {
      'title': $('#title').val(),
      'description': $('#description').val(),
      'content': markdownEditor.content,
      'music_server': $("#music_server").val(),
      'music_id': $('#music_id').val()
    },
    async: true,
    success: function (data) {
      error_code = data.error_code;
      switch (error_code) {
        case 3001:
          show_error("文章发布", "请登录后继续。");
          break;
        case 3002:
          show_error("文章发布", "标题名不能为空。");
          break;
        case 1:
          success("文章发布", data.article_id);
          return;
        default:
          show_error("文章发布", data.detail);
          break;
      }
    },
    error: function (xhr, textStatus, errorThrown) {
      show_error("文章发布", "您与服务器断开连接。");
      /*错误信息处理*/
      console.log("进入error---");
      console.log("状态码："+xhr.status);
      console.log("状态:"+xhr.readyState);//当前状态,0-未初始化，1-正在载入，2-已经载入，3-数据进行交互，4-完成。
      console.log("错误信息:"+xhr.statusText );
      console.log("返回响应信息："+xhr.responseText );//这里是详细的信息
      console.log("请求状态："+textStatus); 
      console.log(errorThrown);
      console.log("请求失败"); 
    }
  });
}
function deleteFile(id, filename) {
  swal({
    title: "删除",
    icon: "warning",
    text: `你确定要删除 ${filename} 吗？`,
    dangerMode: true,
    buttons: {
      cancel: "取消",
      confirm: {
        text: "确定",
        closeModal: false,
      }
    }
  }).then((value) => {
    if (value) {
      $.ajax({
        url: `/api/delete/${id}/${filename}`,
        type: 'POST',
        async: true,
        success: function (data) {
          error_code = data.error_code;
          switch (error_code) {
            case 9001:
              show_error("删除", "操作不合法。");
              break;
            case 9002:
              show_error("删除", data.detail);
              break;
            case 1:
              success("删除", id + '/edit');
              return;
            default:
              show_error("删除", error_code);
              break;
          }
        },
        error: show_error("删除", "您与服务器断开连接。")
      });
    } else { swal.close(); }
  })
  
}
function uploadFile(id) {
  console.log("Start uploading. . .");
  swal({
    title: "正在上传文件. . .",
    icon: "/img/loading.gif",
    buttons: false
  });
  var formData = new FormData($('#uploadForm')[0]); 
  $.ajax({
    url: `/api/upload/${id}`,
    type: 'POST',
    data: formData,
    async: true,
    contentType: false,
    // 告诉jQuery不要去设置Content-Type请求头
    processData: false,
    // 告诉jQuery不要去处理发送的数据
    success: function (data) {
      error_code = data.error_code;
      switch (error_code) {
        case 9001:
          show_error("文件上传", "未选择文件。");
          break;
        case 9002:
          show_error("文件上传", "文件格式不正确。请使用 ZIP 格式。");
          break;
        case 1:
          success("文件上传", id + '/edit');
          return;
        default:
          show_error("文件上传", `${data.detail}`);
          break;
      }
    },
    error: function (xhr, textStatus, errorThrown) {
      show_error("文件上传", "您与服务器断开连接。");
      /*错误信息处理*/
      show_error("文件上传", "状态码："+xhr.status + '\n状态：'+xhr.readyState + '\n错误信息：'+xhr.statusText + "\n返回响应信息："+xhr.responseText + "\n请求状态："+textStatus + '\n' + errorThrown);
    }
  });

}
<% if ('undefined' != typeof article) { %>
function writeAlbum() {
  if (markdownEditor.content.length > 0) {
    swal({
      title: "检测到编辑器中存在内容",
      icon: "warning",
      text: `你确定要覆盖原始内容并重新生成吗？`,
      buttons: {
        cancel: "取消",
        confirm: {
          text: "确定",
          closeModal: false,
        }
      }
    }).then (value => {
      if (value) {
        markdownEditor.content = $('#fileListTmp').val();
        submit(<%= article.id %>);
      }
    })
  } else markdownEditor.content = $('#fileListTmp').val();
}
<% } %>
</script>

<%- include('foot') %>